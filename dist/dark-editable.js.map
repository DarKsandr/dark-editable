{"version":3,"file":"dark-editable.js","sources":["../src/Modes/BaseMode.ts","../src/Modes/PopupMode.ts","../src/Modes/InlineMode.ts","../src/Types/BaseType.ts","../src/Types/InputType.ts","../src/Types/TextAreaType.ts","../src/Types/SelectType.ts","../src/Types/DateType.ts","../src/Types/DateTimeType.ts","../src/dark-editable.ts"],"sourcesContent":["import DarkEditable from \"../dark-editable.ts\";\n\nexport default class BaseMode{\n    context: DarkEditable;\n\n    constructor(context: DarkEditable) {\n        if(this.constructor === BaseMode){\n            throw new Error(`It's abstract class`);\n        }\n        this.context = context;\n    }\n    event_show(){\n        this.context.typeElement.hideError();\n        if(!this.context.typeElement.element){\n            throw new Error(\"Element is missing!\");\n        }\n        this.context.typeElement.element.value = this.context.getValue();\n        this.context.element.dispatchEvent(new CustomEvent(\"show\", {detail: {DarkEditable: this.context}}));\n    }\n    event_shown(){\n        this.context.element.dispatchEvent(new CustomEvent(\"shown\", {detail: {DarkEditable: this.context}}));\n    }\n    event_hide(){\n        this.context.element.dispatchEvent(new CustomEvent(\"hide\", {detail: {DarkEditable: this.context}}));\n    }\n    event_hidden(){\n        this.context.element.dispatchEvent(new CustomEvent(\"hidden\", {detail: {DarkEditable: this.context}}));\n    }\n    init(){\n        throw new Error('Method `init` not define!');\n    }\n    enable(){\n        throw new Error('Method `enable` not define!');\n    }\n    disable(){\n        throw new Error('Method `disable` not define!');\n    }\n    hide(){\n        throw new Error('Method `hide` not define!');\n    }\n}","import { Popover } from \"bootstrap\";\nimport BaseMode from \"./BaseMode.js\";\n\nexport default class PopupMode extends BaseMode{\n\n    popover: Popover|null = null;\n\n    init(){\n        const options = {\n            container: \"body\",\n            content: this.context.typeElement.create(),\n            html: true,\n            customClass: \"dark-editable\",\n            title: this.context.options.title,\n        };\n        this.popover = new Popover(this.context.element, Object.assign(\n            options, \n            this.context.options.popoverOptions\n        ));\n        this.context.element.addEventListener('show.bs.popover', () => {\n            this.event_show();\n        });\n        this.context.element.addEventListener('shown.bs.popover', () => {\n            this.event_shown();\n        });\n        this.context.element.addEventListener('hide.bs.popover', () => {\n            this.event_hide();\n        });\n        this.context.element.addEventListener('hidden.bs.popover', () => {\n            this.event_hidden();\n        });\n\n        document.addEventListener('click', (e) => {\n            const target = <HTMLElement>e.target;\n            // @ts-ignore\n            if(this.popover && target === this.popover.tip || target === this.context.element) return;\n            let current = target.parentNode;\n            while(current){\n                // @ts-ignore\n                if(current === this.popover.tip) return;\n                current = current.parentNode;\n            }\n            this.hide();\n        })\n    }\n    enable(): void\n    {\n        if(this.popover){\n            this.popover.enable();\n        }\n    }\n    disable(): void\n    {\n        if(this.popover){\n            this.popover.disable();\n        }\n    }\n    hide(): void\n    {\n        if(this.popover){\n            this.popover.hide();\n        }\n    }\n}","import BaseMode from \"./BaseMode.js\";\n\nexport default class InlineMode extends BaseMode{\n    init(){\n        const open = () => {\n            if(!this.context.options.disabled){\n                const item = this.context.typeElement.create();\n                this.event_show();\n                this.context.element.removeEventListener('click', open);\n                this.context.element.innerHTML = '';\n                this.context.element.append(item);\n                this.event_shown();\n            }\n        }\n        this.context.element.addEventListener('click', open);\n    }\n    enable(){\n\n    }\n    disable(){\n\n    }\n    hide(){\n        this.event_hide();\n        this.context.element.innerHTML = this.context.getValue();\n        setTimeout(() => {\n            this.init();\n            this.event_hidden();\n        }, 100);\n    }\n}","import DarkEditable from \"../dark-editable.ts\";\nimport BaseTypeButtons from \"../Interfaces/BaseTypeButtons.ts\";\n\nexport default class BaseType{\n    context: DarkEditable;\n    element: HTMLInputElement|null = null;\n    error: HTMLElement|null = null;\n    form: HTMLElement|null = null;\n    load: HTMLElement|null  = null;\n    buttons: BaseTypeButtons = {success: null, cancel: null};\n\n    constructor(context: DarkEditable) {\n        if(this.constructor === BaseType){\n            throw new Error(`It's abstract class`);\n        }\n        this.context = context;\n    }\n\n    create(): HTMLElement\n    {\n        throw new Error('Method `create` not define!');\n    }\n\n    createContainer(element: HTMLInputElement): HTMLDivElement\n    {\n        const div = document.createElement(`div`);\n        this.element = element;\n        this.error = this.createContainerError();\n        this.form = this.createContainerForm();\n        this.load = this.createContainerLoad();\n        this.form.append(element, this.load);\n        this.buttons.success = null;\n        this.buttons.cancel = null;\n        if(this.context.options.showbuttons){\n            this.buttons.success = this.createButtonSuccess();\n            this.buttons.cancel = this.createButtonCancel();\n            this.form.append(this.buttons.success, this.buttons.cancel);\n        }\n\n        div.append(this.error, this.form);\n        return div;\n    }\n\n    createContainerError(): HTMLDivElement\n    {\n        const div = document.createElement(`div`);\n        div.classList.add(\"text-danger\", \"fst-italic\", \"mb-2\", \"fw-bold\");\n        div.style.display = \"none\";\n        return div;\n    }\n\n    createContainerForm(): HTMLFormElement\n    {\n        const form = document.createElement(`form`);\n        form.classList.add(\"d-flex\", \"align-items-start\");\n        form.style.gap = \"20px\";\n        form.addEventListener('submit', async e => {\n            e.preventDefault();\n            const newValue = this.getValue();\n            if(this.context.options.send && this.context.options.pk && this.context.options.url && (this.context.getValue() !== newValue)){\n                this.showLoad();\n                let msg;\n                try {\n                    const response = await this.ajax(newValue);\n                    if(response.ok){\n                        msg = await this.context.success(response, newValue);\n                    } else {\n                        msg = await this.context.error(response, newValue) || `${response.status} ${response.statusText}`;\n                    }\n                } catch (error) {\n                    console.error(error);\n                    msg = error;\n                }\n\n                if(msg){\n                    this.setError(msg);\n                    this.showError();\n                } else {\n                    this.setError('');\n                    this.hideError();\n                    this.context.setValue(this.getValue());\n                    this.context.modeElement.hide();\n                    this.initText();\n                }\n                this.hideLoad();\n            } else {\n                this.context.setValue(this.getValue());\n                this.context.modeElement.hide();\n                this.initText();\n            }\n            this.context.element.dispatchEvent(new CustomEvent(\"save\", {detail: {DarkEditable: this.context}}));\n        })\n        return form;\n    }\n\n    createContainerLoad(): HTMLDivElement\n    {\n        const div = document.createElement(`div`);\n        div.style.display = \"none\";\n        div.style.position = \"absolute\";\n        div.style.background = \"white\";\n        div.style.width = \"100%\";\n        div.style.height = \"100%\";\n        div.style.top = '0';\n        div.style.left = '0';\n        const loader = document.createElement(`div`);\n        loader.classList.add(\"dark-editable-loader\");\n        div.append(loader);\n        return div;\n    }\n\n    createButton(): HTMLButtonElement\n    {\n        const button = document.createElement(\"button\");\n        button.type = \"button\";\n        button.classList.add(\"btn\", \"btn-sm\");\n        button.style.color = \"transparent\";\n        button.style.textShadow = \"0 0 0 white\";\n        return button;\n    }\n\n    createButtonSuccess(): HTMLButtonElement\n    {\n        const btn_success = this.createButton();\n        btn_success.type = \"submit\";\n        btn_success.classList.add(\"btn-success\");\n        btn_success.innerHTML = \"✔\";\n        return btn_success;\n    }\n\n    createButtonCancel(): HTMLButtonElement\n    {\n        const btn_cancel = this.createButton();\n        btn_cancel.classList.add(\"btn-danger\");\n        const div = document.createElement(\"div\");\n        div.innerHTML = \"✖\";\n        btn_cancel.append(div);\n        btn_cancel.addEventListener(\"click\", () => {\n            this.context.modeElement.hide();\n        });\n        return btn_cancel;\n    }\n\n    hideLoad(): void\n    {\n        if(this.load){\n            this.load.style.display = \"none\";\n        }\n    }\n\n    showLoad(): void\n    {\n        if(this.load){\n            this.load.style.display = \"block\";\n        }\n    }\n\n    ajax(new_value: string): Promise<Response>\n    {\n        let url = this.context.options.url;\n        if(!url){\n            throw new Error(\"URL is required!\");\n        }\n        if(!this.context.options.pk){\n            throw new Error(\"pk is required!\");\n        }\n        if(!this.context.options.name){\n            throw new Error(\"Name is required!\");\n        }\n        const form = new FormData;\n        form.append(\"pk\", this.context.options.pk);\n        form.append(\"name\", this.context.options.name);\n        form.append(\"value\", new_value);\n        if(this.context.options.ajaxOptions?.method === \"GET\"){\n            const params: [string?] = [];\n            form.forEach((value, key) => {\n                params.push(`${key}=${value}`);\n            });\n            url += \"?\" + params.join(\"&\");\n        }\n\n        const ajaxOptions = {...this.context.options.ajaxOptions};\n        ajaxOptions.body = form;\n        return fetch(url, ajaxOptions);\n    }\n\n    async successResponse(_response: Response, _newValue: string): Promise<any>\n    {\n\n    }\n\n    async errorResponse(_response: Response, _newValue: string): Promise<any>\n    {\n\n    }\n\n    setError(errorMsg: string): void\n    {\n        if(this.error){\n            this.error.innerHTML = errorMsg;\n        }\n    }\n\n    showError(): void\n    {\n        if(this.error){\n            this.error.style.display = \"block\";\n        }\n    }\n\n    hideError(): void\n    {\n        if(this.error){\n            this.error.style.display = \"none\";\n        }\n    }\n\n    createElement(name: string): HTMLInputElement\n    {\n        const element = <HTMLInputElement>document.createElement(name);\n        element.classList.add(\"form-control\");\n        if(this.context.options.required){\n            element.required = this.context.options.required;\n        }\n        if(!this.context.options.showbuttons){\n            element.addEventListener('change', () => {\n                if(this.form){\n                    this.form.dispatchEvent(new Event('submit'));\n                }\n            });\n        }\n        this.add_focus(element);\n        return element;\n    }\n\n    add_focus(element: HTMLInputElement): void\n    {\n        this.context.element.addEventListener('shown', function(){\n            element.focus();\n        });\n    }\n\n    initText(): boolean\n    {\n        if(this.context.getValue() === \"\"){\n            this.context.element.innerHTML = this.context.options.emptytext || \"\";\n            return true;\n        } else {\n            this.context.element.innerHTML = this.context.getValue();\n            return false;\n        }\n    }\n\n    initOptions(): void\n    {\n\n    }\n\n    getValue(): string\n    {\n        return this.element ? this.element.value : '';\n    }\n}","import BaseType from \"./BaseType.js\";\n\nexport default class InputType extends BaseType{\n    create() {\n        const input = this.createElement(`input`);\n        const { options = {} } = this.context;\n\n        input.type = typeof options.type === \"string\" ? options.type : 'text';\n\n        const inputAttrs = options.attributes || {};\n        const allowedAttributes = [\n            'step', 'min', 'max',\n            'minlength', 'maxlength',\n            'pattern', 'placeholder',\n            'required', 'readonly',\n            'disabled', 'autocomplete',\n            'autofocus', 'name', 'value'\n        ];\n        for (const [key, value] of Object.entries(inputAttrs)) {\n            if (allowedAttributes.includes(key) && value !== undefined) {\n                input.setAttribute(key, String(value));\n            }\n        }\n\n        return this.createContainer(input);\n    }\n}","import BaseType from \"./BaseType.js\";\n\nexport default class TextAreaType extends BaseType{\n    create(){\n        const textarea = this.createElement(`textarea`);\n\n        return this.createContainer(textarea);\n    }\n}","import BaseType from \"./BaseType.js\";\n\nexport default class SelectType extends BaseType{\n    create(){\n        const select = this.createElement(`select`);\n        if(this.context.options.source && Array.isArray(this.context.options.source)) {\n            this.context.options.source.forEach(item => {\n                const opt = document.createElement(`option`);\n                opt.value = item.value;\n                opt.innerHTML = item.text;\n                select.append(opt);\n            });\n        }\n\n        return this.createContainer(select);\n    }\n\n    initText(){\n        this.context.element.innerHTML = this.context.options.emptytext || \"\";\n        if(this.context.getValue() !== \"\" && this.context.options.source && Array.isArray(this.context.options.source) && this.context.options.source.length > 0){\n            for(let i = 0; i < this.context.options.source.length; i++){\n                const item = this.context.options.source[ i ];\n                if( item.value == this.context.getValue()){\n                    this.context.element.innerHTML = item.text;\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    initOptions(){\n        this.context.get_opt(\"source\", []);\n        if(this.context.options && typeof this.context.options.source === \"string\" && this.context.options.source !== \"\"){\n            this.context.options.source = JSON.parse(this.context.options.source);\n        }\n    }\n}","import BaseType from \"./BaseType.js\";\nimport moment from \"moment\";\n\nexport default class DateType extends BaseType{\n    create(){\n        const input = this.createElement(`input`);\n        input.type = \"date\";\n\n        return this.createContainer(input);\n    }\n\n    initText(): boolean\n    {\n        const value = this.context.getValue();\n        if(value === \"\"){\n            this.context.element.innerHTML = this.context.options.emptytext || \"\";\n            return true;\n        } else {\n            this.context.element.innerHTML = moment(value, this.context.options.format).format(this.context.options.viewformat);\n            return false;\n        }\n    }\n\n    initOptions(): void\n    {\n        const default_format = \"YYYY-MM-DD\";\n        const format = this.context.get_opt(\"format\", default_format);\n        const viewformat = this.context.get_opt(\"viewformat\", default_format);\n        this.context.setValue(moment(this.context.getValue(), viewformat).format(format));\n    }\n}","import DateType from \"./DateType.js\";\nimport moment from \"moment\";\n\nexport default class DateTimeType extends DateType{\n    create(){\n        const input = this.createElement(`input`);\n        input.type = \"datetime-local\";\n\n        return this.createContainer(input);\n    }\n\n    initOptions(): void\n    {\n        const format = this.context.get_opt(\"format\", \"YYYY-MM-DD HH:mm\");\n        const viewformat = this.context.get_opt(\"viewformat\", \"YYYY-MM-DD HH:mm\");\n        this.context.setValue(moment(this.context.getValue(), viewformat).format(format));\n    }\n}","import \"./dark-editable.css\";\nimport PopupMode from \"./Modes/PopupMode.ts\";\nimport InlineMode from \"./Modes/InlineMode.ts\";\nimport BaseType from \"./Types/BaseType.ts\";\nimport InputType from \"./Types/InputType.ts\";\nimport TextAreaType from \"./Types/TextAreaType.ts\";\nimport SelectType from \"./Types/SelectType.ts\";\nimport DateType from \"./Types/DateType.ts\";\nimport DateTimeType from \"./Types/DateTimeType.ts\";\nimport Options from \"./Interfaces/Options.ts\";\nimport BaseMode from \"./Modes/BaseMode.ts\";\n\n/*!\n * DarkEditable.js\n * License: MIT\n */\nexport default class DarkEditable{\n    element: HTMLElement;\n    options: Options;\n\n    typeElement: BaseType;\n    modeElement: BaseMode;\n\n    constructor(element: HTMLElement, options: Options = {}) {\n        this.element = element;\n        this.options = { ...options };\n        \n        this.init_options();\n        this.typeElement = this.route_type();\n        this.typeElement.initOptions();\n        this.modeElement = this.route_mode();\n        this.modeElement.init();\n        this.init_text();\n        this.init_style();\n        if(this.options.disabled){\n            this.disable();\n        }\n        this.element.dispatchEvent(new CustomEvent(\"init\", {detail: {DarkEditable: this}}));\n    }\n\n    /* INIT METHODS */\n\n    get_opt(name: string, default_value: any): any\n    {\n        // @ts-ignore\n        return this.options[name] = this.element.dataset?.[ name ] ?? this.options?.[ name ] ?? default_value;\n    }\n\n    get_opt_bool(name: string, default_value: any): void\n    {\n        this.get_opt(name, default_value);\n        // @ts-ignore\n        if(typeof this.options[ name ] !== \"boolean\"){\n            // @ts-ignore\n            if(this.options[ name ] === \"true\") {\n                // @ts-ignore\n                this.options[ name ] = true;\n                return;\n            }\n            // @ts-ignore\n            if(this.options[ name ] === \"false\") {\n                // @ts-ignore\n                this.options[ name ] = false;\n                return;\n            }\n            // @ts-ignore\n            this.options[ name ] = default_value;\n        }\n    }\n\n    init_options(): void\n    {\n        //priority date elements\n        this.get_opt(\"value\", this.element.innerHTML);\n        this.get_opt(\"name\", this.element.id);\n        this.get_opt(\"pk\", null);\n        this.get_opt(\"title\", \"\");\n        this.get_opt(\"type\", \"text\");\n        this.get_opt(\"emptytext\", \"Empty\");\n        this.get_opt(\"mode\", \"popup\");\n        this.get_opt(\"url\", null);\n        this.get_opt(\"ajaxOptions\", {});\n        this.options.ajaxOptions = Object.assign({\n            method: \"POST\",\n            dataType: \"text\",\n        }, this.options.ajaxOptions);\n        this.get_opt_bool(\"send\", true);\n        this.get_opt_bool(\"disabled\", false);\n        this.get_opt_bool(\"required\", false);\n        this.get_opt_bool(\"showbuttons\", true);\n        if(this.options?.success && typeof this.options?.success === \"function\"){\n            this.success = this.options.success;\n        }\n        if(this.options?.error && typeof this.options?.error === \"function\"){\n            this.error = this.options.error;\n        }\n        this.get_opt(\"attributes\", {});\n        this.get_opt(\"popoverOptions\", {});\n    }\n\n    init_text(){\n        const empty_class = \"dark-editable-element-empty\";\n        this.element.classList.remove(empty_class);\n        if(this.typeElement.initText()){\n            this.element.classList.add(empty_class);\n        }\n    }\n\n    init_style(){\n        this.element.classList.add(\"dark-editable-element\");\n    }\n\n    /* INIT METHODS END */\n    route_mode(){\n        switch (this.options.mode){\n            default:\n                throw new Error(`Mode ${this.options.mode} not found!`)\n            case 'popup':\n                return new PopupMode(this);\n            case 'inline':\n                return new InlineMode(this);\n        }\n    }\n\n    route_type(): BaseType\n    {\n        if(this.options.type && typeof this.options.type !== 'string'){\n            // @ts-ignore\n            return new this.options.type(this);\n        }\n        switch (this.options.type) {\n            case \"text\":\n            case \"password\":\n            case \"email\":\n            case \"url\":\n            case \"tel\":\n            case \"number\":\n            case \"range\":\n            case \"time\":\n                return new InputType(this);\n            case \"textarea\":\n                return new TextAreaType(this);\n            case \"select\":\n                return new SelectType(this);\n            case \"date\":\n                return new DateType(this);\n            case \"datetime\":\n                return new DateTimeType(this);\n        }\n        throw new Error(`Undefined type`);\n    }\n\n    /* AJAX */\n\n    async success(response: Response, newValue: string): Promise<any>\n    {\n        return await this.typeElement.successResponse(response, newValue);\n    }\n\n    async error(response: Response, newValue: string): Promise<any>\n    {\n        return await this.typeElement.errorResponse(response, newValue);\n    }\n\n    /* AJAX END */\n\n    /* METHODS */\n\n    enable(): void\n    {\n        this.options.disabled = false;\n        this.element.classList.remove(\"dark-editable-element-disabled\");\n        this.modeElement.enable();\n    }\n\n    disable(): void\n    {\n        this.options.disabled = true;\n        this.element.classList.add(\"dark-editable-element-disabled\");\n        this.modeElement.enable();\n    }\n\n    setValue(value: string): void\n    {\n        this.options.value = value;\n        this.init_text();\n    }\n\n    getValue(): string\n    {\n        return this.options.value ?? '';\n    }\n\n    getOption(name: string): any\n    {\n        // @ts-ignore\n        return this.options[name] ?? null;\n    }\n\n    /* METHODS END */\n}"],"names":["BaseMode","context","__publicField","PopupMode","options","Popover","e","target","current","InlineMode","open","item","BaseType","element","div","form","newValue","msg","response","error","loader","button","btn_success","btn_cancel","new_value","url","_a","params","value","key","ajaxOptions","_response","_newValue","errorMsg","name","InputType","input","inputAttrs","allowedAttributes","TextAreaType","textarea","SelectType","select","opt","i","DateType","moment","default_format","format","viewformat","DateTimeType","DarkEditable","default_value","_b","_c","_d","empty_class"],"mappings":"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"}