{"version":3,"file":"dark-editable.js","sources":["../src/Modes/BaseMode.ts","../src/Modes/PopupMode.ts","../src/Modes/InlineMode.ts","../src/Types/BaseType.ts","../src/Types/InputType.ts","../src/Types/TextAreaType.ts","../src/Types/SelectType.ts","../src/Types/DateType.ts","../src/Types/DateTimeType.ts","../src/dark-editable.ts"],"sourcesContent":["import DarkEditable from \"../dark-editable.ts\";\r\n\r\nexport default class BaseMode{\r\n    context: DarkEditable;\r\n\r\n    constructor(context: DarkEditable) {\r\n        if(this.constructor === BaseMode){\r\n            throw new Error(`It's abstract class`);\r\n        }\r\n        this.context = context;\r\n    }\r\n    event_show(){\r\n        this.context.typeElement.hideError();\r\n        if(!this.context.typeElement.element){\r\n            throw new Error(\"Element is missing!\");\r\n        }\r\n        this.context.typeElement.element.value = this.context.getValue();\r\n        this.context.element.dispatchEvent(new CustomEvent(\"show\"));\r\n    }\r\n    event_shown(){\r\n        this.context.element.dispatchEvent(new CustomEvent(\"shown\"));\r\n    }\r\n    event_hide(){\r\n        this.context.element.dispatchEvent(new CustomEvent(\"hide\"));\r\n    }\r\n    event_hidden(){\r\n        this.context.element.dispatchEvent(new CustomEvent(\"hidden\"));\r\n    }\r\n    init(){\r\n        throw new Error('Method `init` not define!');\r\n    }\r\n    enable(){\r\n        throw new Error('Method `enable` not define!');\r\n    }\r\n    disable(){\r\n        throw new Error('Method `disable` not define!');\r\n    }\r\n    hide(){\r\n        throw new Error('Method `hide` not define!');\r\n    }\r\n}","import { Popover } from \"bootstrap\";\r\nimport BaseMode from \"./BaseMode.js\";\r\n\r\nexport default class PopupMode extends BaseMode{\r\n\r\n    popover: Popover|null = null;\r\n\r\n    init(){\r\n        this.popover = new Popover(this.context.element, {\r\n            container: \"body\",\r\n            content: this.context.typeElement.create(),\r\n            html: true,\r\n            customClass: \"dark-editable\",\r\n            title: this.context.options.title,\r\n        });\r\n        this.context.element.addEventListener('show.bs.popover', () => {\r\n            this.event_show();\r\n        });\r\n        this.context.element.addEventListener('shown.bs.popover', () => {\r\n            this.event_shown();\r\n        });\r\n        this.context.element.addEventListener('hide.bs.popover', () => {\r\n            this.event_hide();\r\n        });\r\n        this.context.element.addEventListener('hidden.bs.popover', () => {\r\n            this.event_hidden();\r\n        });\r\n\r\n        document.addEventListener('click', (e) => {\r\n            const target = <HTMLElement>e.target;\r\n            // @ts-ignore\r\n            if(this.popover && target === this.popover.tip || target === this.context.element) return;\r\n            let current = target.parentNode;\r\n            while(current){\r\n                // @ts-ignore\r\n                if(current === this.popover.tip) return;\r\n                current = current.parentNode;\r\n            }\r\n            this.hide();\r\n        })\r\n    }\r\n    enable(): void\r\n    {\r\n        if(this.popover){\r\n            this.popover.enable();\r\n        }\r\n    }\r\n    disable(): void\r\n    {\r\n        if(this.popover){\r\n            this.popover.disable();\r\n        }\r\n    }\r\n    hide(): void\r\n    {\r\n        if(this.popover){\r\n            this.popover.hide();\r\n        }\r\n    }\r\n}","import BaseMode from \"./BaseMode.js\";\r\n\r\nexport default class InlineMode extends BaseMode{\r\n    init(){\r\n        const open = () => {\r\n            if(!this.context.options.disabled){\r\n                const item = this.context.typeElement.create();\r\n                this.event_show();\r\n                this.context.element.removeEventListener('click', open);\r\n                this.context.element.innerHTML = '';\r\n                this.context.element.append(item);\r\n                this.event_shown();\r\n            }\r\n        }\r\n        this.context.element.addEventListener('click', open);\r\n    }\r\n    enable(){\r\n\r\n    }\r\n    disable(){\r\n\r\n    }\r\n    hide(){\r\n        this.event_hide();\r\n        this.context.element.innerHTML = this.context.getValue();\r\n        setTimeout(() => {\r\n            this.init();\r\n            this.event_hidden();\r\n        }, 100);\r\n    }\r\n}","import DarkEditable from \"../dark-editable.ts\";\r\nimport BaseTypeButtons from \"../Interfaces/BaseTypeButtons.ts\";\r\n\r\nexport default class BaseType{\r\n    context: DarkEditable;\r\n    element: HTMLInputElement|null = null;\r\n    error: HTMLElement|null = null;\r\n    form: HTMLElement|null = null;\r\n    load: HTMLElement|null  = null;\r\n    buttons: BaseTypeButtons = {success: null, cancel: null};\r\n\r\n    constructor(context: DarkEditable) {\r\n        if(this.constructor === BaseType){\r\n            throw new Error(`It's abstract class`);\r\n        }\r\n        this.context = context;\r\n    }\r\n\r\n    create(): HTMLElement\r\n    {\r\n        throw new Error('Method `create` not define!');\r\n    }\r\n\r\n    createContainer(element: HTMLInputElement): HTMLDivElement\r\n    {\r\n        const div = document.createElement(`div`);\r\n        this.element = element;\r\n        this.error = this.createContainerError();\r\n        this.form = this.createContainerForm();\r\n        this.load = this.createContainerLoad();\r\n        this.form.append(element, this.load);\r\n        this.buttons.success = null;\r\n        this.buttons.cancel = null;\r\n        if(this.context.options.showbuttons){\r\n            this.buttons.success = this.createButtonSuccess();\r\n            this.buttons.cancel = this.createButtonCancel();\r\n            this.form.append(this.buttons.success, this.buttons.cancel);\r\n        }\r\n\r\n        div.append(this.error, this.form);\r\n        return div;\r\n    }\r\n\r\n    createContainerError(): HTMLDivElement\r\n    {\r\n        const div = document.createElement(`div`);\r\n        div.classList.add(\"text-danger\", \"fst-italic\", \"mb-2\", \"fw-bold\");\r\n        div.style.display = \"none\";\r\n        return div;\r\n    }\r\n\r\n    createContainerForm(): HTMLFormElement\r\n    {\r\n        const form = document.createElement(`form`);\r\n        form.classList.add(\"d-flex\", \"align-items-start\");\r\n        form.style.gap = \"20px\";\r\n        form.addEventListener('submit', async e => {\r\n            e.preventDefault();\r\n            const newValue = this.getValue();\r\n            if(this.context.options.send && this.context.options.pk && this.context.options.url && (this.context.getValue() !== newValue)){\r\n                this.showLoad();\r\n                let msg;\r\n                try {\r\n                    const response = await this.ajax(newValue);\r\n                    if(response.ok){\r\n                        msg = await this.context.success(response, newValue);\r\n                    } else {\r\n                        msg = await this.context.error(response, newValue) || `${response.status} ${response.statusText}`;\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                    msg = error;\r\n                }\r\n\r\n                if(msg){\r\n                    this.setError(msg);\r\n                    this.showError();\r\n                } else {\r\n                    this.setError('');\r\n                    this.hideError();\r\n                    this.context.setValue(this.getValue());\r\n                    this.context.modeElement.hide();\r\n                    this.initText();\r\n                }\r\n                this.hideLoad();\r\n            } else {\r\n                this.context.setValue(this.getValue());\r\n                this.context.modeElement.hide();\r\n                this.initText();\r\n            }\r\n            this.context.element.dispatchEvent(new CustomEvent(\"save\"));\r\n        })\r\n        return form;\r\n    }\r\n\r\n    createContainerLoad(): HTMLDivElement\r\n    {\r\n        const div = document.createElement(`div`);\r\n        div.style.display = \"none\";\r\n        div.style.position = \"absolute\";\r\n        div.style.background = \"white\";\r\n        div.style.width = \"100%\";\r\n        div.style.height = \"100%\";\r\n        div.style.top = '0';\r\n        div.style.left = '0';\r\n        const loader = document.createElement(`div`);\r\n        loader.classList.add(\"dark-editable-loader\");\r\n        div.append(loader);\r\n        return div;\r\n    }\r\n\r\n    createButton(): HTMLButtonElement\r\n    {\r\n        const button = document.createElement(\"button\");\r\n        button.type = \"button\";\r\n        button.classList.add(\"btn\", \"btn-sm\");\r\n        button.style.color = \"transparent\";\r\n        button.style.textShadow = \"0 0 0 white\";\r\n        return button;\r\n    }\r\n\r\n    createButtonSuccess(): HTMLButtonElement\r\n    {\r\n        const btn_success = this.createButton();\r\n        btn_success.type = \"submit\";\r\n        btn_success.classList.add(\"btn-success\");\r\n        btn_success.innerHTML = \"✔\";\r\n        return btn_success;\r\n    }\r\n\r\n    createButtonCancel(): HTMLButtonElement\r\n    {\r\n        const btn_cancel = this.createButton();\r\n        btn_cancel.classList.add(\"btn-danger\");\r\n        const div = document.createElement(\"div\");\r\n        div.innerHTML = \"✖\";\r\n        btn_cancel.append(div);\r\n        btn_cancel.addEventListener(\"click\", () => {\r\n            this.context.modeElement.hide();\r\n        });\r\n        return btn_cancel;\r\n    }\r\n\r\n    hideLoad(): void\r\n    {\r\n        if(this.load){\r\n            this.load.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    showLoad(): void\r\n    {\r\n        if(this.load){\r\n            this.load.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    ajax(new_value: string): Promise<Response>\r\n    {\r\n        let url = this.context.options.url;\r\n        if(!url){\r\n            throw new Error(\"URL is required!\");\r\n        }\r\n        if(!this.context.options.pk){\r\n            throw new Error(\"pk is required!\");\r\n        }\r\n        if(!this.context.options.name){\r\n            throw new Error(\"Name is required!\");\r\n        }\r\n        const form = new FormData;\r\n        form.append(\"pk\", this.context.options.pk);\r\n        form.append(\"name\", this.context.options.name);\r\n        form.append(\"value\", new_value);\r\n        if(this.context.options.ajaxOptions?.method === \"GET\"){\r\n            const params: [string?] = [];\r\n            form.forEach((value, key) => {\r\n                params.push(`${key}=${value}`);\r\n            });\r\n            url += \"?\" + params.join(\"&\");\r\n        }\r\n\r\n        const ajaxOptions = {...this.context.options.ajaxOptions};\r\n        ajaxOptions.body = form;\r\n        return fetch(url, ajaxOptions);\r\n    }\r\n\r\n    async successResponse(_response: Response, _newValue: string): Promise<any>\r\n    {\r\n\r\n    }\r\n\r\n    async errorResponse(_response: Response, _newValue: string): Promise<any>\r\n    {\r\n\r\n    }\r\n\r\n    setError(errorMsg: string): void\r\n    {\r\n        if(this.error){\r\n            this.error.innerHTML = errorMsg;\r\n        }\r\n    }\r\n\r\n    showError(): void\r\n    {\r\n        if(this.error){\r\n            this.error.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    hideError(): void\r\n    {\r\n        if(this.error){\r\n            this.error.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    createElement(name: string): HTMLInputElement\r\n    {\r\n        const element = <HTMLInputElement>document.createElement(name);\r\n        element.classList.add(\"form-control\");\r\n        if(this.context.options.required){\r\n            element.required = this.context.options.required;\r\n        }\r\n        if(!this.context.options.showbuttons){\r\n            element.addEventListener('change', () => {\r\n                if(this.form){\r\n                    this.form.dispatchEvent(new Event('submit'));\r\n                }\r\n            });\r\n        }\r\n        this.add_focus(element);\r\n        return element;\r\n    }\r\n\r\n    add_focus(element: HTMLInputElement): void\r\n    {\r\n        this.context.element.addEventListener('shown', function(){\r\n            element.focus();\r\n        });\r\n    }\r\n\r\n    initText(): boolean\r\n    {\r\n        if(this.context.getValue() === \"\"){\r\n            this.context.element.innerHTML = this.context.options.emptytext || \"\";\r\n            return true;\r\n        } else {\r\n            this.context.element.innerHTML = this.context.getValue();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    initOptions(): void\r\n    {\r\n\r\n    }\r\n\r\n    getValue(): string\r\n    {\r\n        return this.element ? this.element.value : '';\r\n    }\r\n}","import BaseType from \"./BaseType.js\";\r\n\r\nexport default class InputType extends BaseType{\r\n    create() {\r\n        const input = this.createElement(`input`);\r\n        const { options = {} } = this.context;\r\n\r\n        input.type = typeof options.type === \"string\" ? options.type : 'text';\r\n\r\n        const inputAttrs = options.attributes || {};\r\n        const allowedAttributes = [\r\n            'step', 'min', 'max',\r\n            'minlength', 'maxlength',\r\n            'pattern', 'placeholder',\r\n            'required', 'readonly',\r\n            'disabled', 'autocomplete',\r\n            'autofocus', 'name', 'value'\r\n        ];\r\n        for (const [key, value] of Object.entries(inputAttrs)) {\r\n            if (allowedAttributes.includes(key) && value !== undefined) {\r\n                input.setAttribute(key, String(value));\r\n            }\r\n        }\r\n\r\n        return this.createContainer(input);\r\n    }\r\n}","import BaseType from \"./BaseType.js\";\r\n\r\nexport default class TextAreaType extends BaseType{\r\n    create(){\r\n        const textarea = this.createElement(`textarea`);\r\n\r\n        return this.createContainer(textarea);\r\n    }\r\n}","import BaseType from \"./BaseType.js\";\r\n\r\nexport default class SelectType extends BaseType{\r\n    create(){\r\n        const select = this.createElement(`select`);\r\n        if(this.context.options.source && Array.isArray(this.context.options.source)) {\r\n            this.context.options.source.forEach(item => {\r\n                const opt = document.createElement(`option`);\r\n                opt.value = item.value;\r\n                opt.innerHTML = item.text;\r\n                select.append(opt);\r\n            });\r\n        }\r\n\r\n        return this.createContainer(select);\r\n    }\r\n\r\n    initText(){\r\n        this.context.element.innerHTML = this.context.options.emptytext || \"\";\r\n        if(this.context.getValue() !== \"\" && this.context.options.source && Array.isArray(this.context.options.source) && this.context.options.source.length > 0){\r\n            for(let i = 0; i < this.context.options.source.length; i++){\r\n                const item = this.context.options.source[ i ];\r\n                if( item.value == this.context.getValue()){\r\n                    this.context.element.innerHTML = item.text;\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    initOptions(){\r\n        this.context.get_opt(\"source\", []);\r\n        if(this.context.options && typeof this.context.options.source === \"string\" && this.context.options.source !== \"\"){\r\n            this.context.options.source = JSON.parse(this.context.options.source);\r\n        }\r\n    }\r\n}","import BaseType from \"./BaseType.js\";\r\nimport moment from \"moment\";\r\n\r\nexport default class DateType extends BaseType{\r\n    create(){\r\n        const input = this.createElement(`input`);\r\n        input.type = \"date\";\r\n\r\n        return this.createContainer(input);\r\n    }\r\n\r\n    initText(): boolean\r\n    {\r\n        if(this.context.getValue() === \"\"){\r\n            this.context.element.innerHTML = this.context.options.emptytext || \"\";\r\n            return true;\r\n        } else {\r\n            this.context.element.innerHTML = moment(this.context.getValue()).format(this.context.options.viewformat);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    initOptions(): void\r\n    {\r\n        const format = this.context.get_opt(\"format\", \"YYYY-MM-DD\");\r\n        const viewformat = this.context.get_opt(\"viewformat\", \"YYYY-MM-DD\");\r\n        this.context.setValue(moment(this.context.getValue(), viewformat).format(format));\r\n    }\r\n}","import DateType from \"./DateType.js\";\r\nimport moment from \"moment\";\r\n\r\nexport default class DateTimeType extends DateType{\r\n    create(){\r\n        const input = this.createElement(`input`);\r\n        input.type = \"datetime-local\";\r\n\r\n        return this.createContainer(input);\r\n    }\r\n\r\n    initOptions(): void\r\n    {\r\n        const format = this.context.get_opt(\"format\", \"YYYY-MM-DD HH:mm\");\r\n        const viewformat = this.context.get_opt(\"viewformat\", \"YYYY-MM-DD HH:mm\");\r\n        this.context.setValue(moment(this.context.getValue(), viewformat).format(format));\r\n    }\r\n}","import \"./dark-editable.css\";\r\nimport PopupMode from \"./Modes/PopupMode.ts\";\r\nimport InlineMode from \"./Modes/InlineMode.ts\";\r\nimport BaseType from \"./Types/BaseType.ts\";\r\nimport InputType from \"./Types/InputType.ts\";\r\nimport TextAreaType from \"./Types/TextAreaType.ts\";\r\nimport SelectType from \"./Types/SelectType.ts\";\r\nimport DateType from \"./Types/DateType.ts\";\r\nimport DateTimeType from \"./Types/DateTimeType.ts\";\r\nimport Options from \"./Interfaces/Options.ts\";\r\nimport BaseMode from \"./Modes/BaseMode.ts\";\r\n\r\n/*!\r\n * DarkEditable.js\r\n * License: MIT\r\n */\r\nexport default class DarkEditable{\r\n    element: HTMLElement;\r\n    options: Options;\r\n\r\n    typeElement: BaseType;\r\n    modeElement: BaseMode;\r\n\r\n    constructor(element: HTMLElement, options: Options = {}) {\r\n        this.element = element;\r\n        this.options = { ...options };\r\n        \r\n        this.init_options();\r\n        this.typeElement = this.route_type();\r\n        this.typeElement.initOptions();\r\n        this.modeElement = this.route_mode();\r\n        this.modeElement.init();\r\n        this.init_text();\r\n        this.init_style();\r\n        if(this.options.disabled){\r\n            this.disable();\r\n        }\r\n        this.element.dispatchEvent(new CustomEvent(\"init\"));\r\n    }\r\n\r\n    /* INIT METHODS */\r\n\r\n    get_opt(name: string, default_value: any): any\r\n    {\r\n        // @ts-ignore\r\n        return this.options[name] = this.element.dataset?.[ name ] ?? this.options?.[ name ] ?? default_value;\r\n    }\r\n\r\n    get_opt_bool(name: string, default_value: any): void\r\n    {\r\n        this.get_opt(name, default_value);\r\n        // @ts-ignore\r\n        if(typeof this.options[ name ] !== \"boolean\"){\r\n            // @ts-ignore\r\n            if(this.options[ name ] === \"true\") {\r\n                // @ts-ignore\r\n                this.options[ name ] = true;\r\n                return;\r\n            }\r\n            // @ts-ignore\r\n            if(this.options[ name ] === \"false\") {\r\n                // @ts-ignore\r\n                this.options[ name ] = false;\r\n                return;\r\n            }\r\n            // @ts-ignore\r\n            this.options[ name ] = default_value;\r\n        }\r\n    }\r\n\r\n    init_options(): void\r\n    {\r\n        //priority date elements\r\n        this.get_opt(\"value\", this.element.innerHTML);\r\n        this.get_opt(\"name\", this.element.id);\r\n        this.get_opt(\"pk\", null);\r\n        this.get_opt(\"title\", \"\");\r\n        this.get_opt(\"type\", \"text\");\r\n        this.get_opt(\"emptytext\", \"Empty\");\r\n        this.get_opt(\"mode\", \"popup\");\r\n        this.get_opt(\"url\", null);\r\n        this.get_opt(\"ajaxOptions\", {});\r\n        this.options.ajaxOptions = Object.assign({\r\n            method: \"POST\",\r\n            dataType: \"text\",\r\n        }, this.options.ajaxOptions);\r\n        this.get_opt_bool(\"send\", true);\r\n        this.get_opt_bool(\"disabled\", false);\r\n        this.get_opt_bool(\"required\", false);\r\n        this.get_opt_bool(\"showbuttons\", true);\r\n        if(this.options?.success && typeof this.options?.success === \"function\"){\r\n            this.success = this.options.success;\r\n        }\r\n        if(this.options?.error && typeof this.options?.error === \"function\"){\r\n            this.error = this.options.error;\r\n        }\r\n        this.get_opt(\"attributes\", {});\r\n    }\r\n\r\n    init_text(){\r\n        const empty_class = \"dark-editable-element-empty\";\r\n        this.element.classList.remove(empty_class);\r\n        if(this.typeElement.initText()){\r\n            this.element.classList.add(empty_class);\r\n        }\r\n    }\r\n\r\n    init_style(){\r\n        this.element.classList.add(\"dark-editable-element\");\r\n    }\r\n\r\n    /* INIT METHODS END */\r\n    route_mode(){\r\n        switch (this.options.mode){\r\n            default:\r\n                throw new Error(`Mode ${this.options.mode} not found!`)\r\n            case 'popup':\r\n                return new PopupMode(this);\r\n            case 'inline':\r\n                return new InlineMode(this);\r\n        }\r\n    }\r\n\r\n    route_type(): BaseType\r\n    {\r\n        if(this.options.type && typeof this.options.type !== 'string'){\r\n            // @ts-ignore\r\n            return new this.options.type(this);\r\n        }\r\n        switch (this.options.type) {\r\n            case \"text\":\r\n            case \"password\":\r\n            case \"email\":\r\n            case \"url\":\r\n            case \"tel\":\r\n            case \"number\":\r\n            case \"range\":\r\n            case \"time\":\r\n                return new InputType(this);\r\n            case \"textarea\":\r\n                return new TextAreaType(this);\r\n            case \"select\":\r\n                return new SelectType(this);\r\n            case \"date\":\r\n                return new DateType(this);\r\n            case \"datetime\":\r\n                return new DateTimeType(this);\r\n        }\r\n        throw new Error(`Undefined type`);\r\n    }\r\n\r\n    /* AJAX */\r\n\r\n    async success(response: Response, newValue: string): Promise<any>\r\n    {\r\n        return await this.typeElement.successResponse(response, newValue);\r\n    }\r\n\r\n    async error(response: Response, newValue: string): Promise<any>\r\n    {\r\n        return await this.typeElement.errorResponse(response, newValue);\r\n    }\r\n\r\n    /* AJAX END */\r\n\r\n    /* METHODS */\r\n\r\n    enable(): void\r\n    {\r\n        this.options.disabled = false;\r\n        this.element.classList.remove(\"dark-editable-element-disabled\");\r\n        this.modeElement.enable();\r\n    }\r\n\r\n    disable(): void\r\n    {\r\n        this.options.disabled = true;\r\n        this.element.classList.add(\"dark-editable-element-disabled\");\r\n        this.modeElement.enable();\r\n    }\r\n\r\n    setValue(value: string): void\r\n    {\r\n        this.options.value = value;\r\n        this.init_text();\r\n    }\r\n\r\n    getValue(): string\r\n    {\r\n        return this.options.value ?? '';\r\n    }\r\n\r\n    /* METHODS END */\r\n}"],"names":["BaseMode","context","__publicField","PopupMode","Popover","target","current","InlineMode","open","item","BaseType","element","div","form","newValue","msg","response","error","loader","button","btn_success","btn_cancel","new_value","url","_a","params","value","key","ajaxOptions","_response","_newValue","errorMsg","name","InputType","input","options","inputAttrs","allowedAttributes","TextAreaType","textarea","SelectType","select","opt","i","DateType","moment","format","viewformat","DateTimeType","DarkEditable","default_value","_b","_c","_d","empty_class"],"mappings":";;;;;AAEA,MAAqBA,EAAQ;AAAA,EAGzB,YAAYC,GAAuB;AAFnC,IAAAC,EAAA;AAGO,QAAA,KAAK,gBAAgBF;AACd,YAAA,IAAI,MAAM,qBAAqB;AAEzC,SAAK,UAAUC;AAAA,EAAA;AAAA,EAEnB,aAAY;AAER,QADK,KAAA,QAAQ,YAAY,UAAU,GAChC,CAAC,KAAK,QAAQ,YAAY;AACnB,YAAA,IAAI,MAAM,qBAAqB;AAEzC,SAAK,QAAQ,YAAY,QAAQ,QAAQ,KAAK,QAAQ,SAAS,GAC/D,KAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,MAAM,CAAC;AAAA,EAAA;AAAA,EAE9D,cAAa;AACT,SAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,OAAO,CAAC;AAAA,EAAA;AAAA,EAE/D,aAAY;AACR,SAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,MAAM,CAAC;AAAA,EAAA;AAAA,EAE9D,eAAc;AACV,SAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,QAAQ,CAAC;AAAA,EAAA;AAAA,EAEhE,OAAM;AACI,UAAA,IAAI,MAAM,2BAA2B;AAAA,EAAA;AAAA,EAE/C,SAAQ;AACE,UAAA,IAAI,MAAM,6BAA6B;AAAA,EAAA;AAAA,EAEjD,UAAS;AACC,UAAA,IAAI,MAAM,8BAA8B;AAAA,EAAA;AAAA,EAElD,OAAM;AACI,UAAA,IAAI,MAAM,2BAA2B;AAAA,EAAA;AAEnD;ACrCA,MAAqBE,UAAkBH,EAAQ;AAAA,EAA/C;AAAA;AAEI,IAAAE,EAAA,iBAAwB;AAAA;AAAA,EAExB,OAAM;AACF,SAAK,UAAU,IAAIE,EAAQ,KAAK,QAAQ,SAAS;AAAA,MAC7C,WAAW;AAAA,MACX,SAAS,KAAK,QAAQ,YAAY,OAAO;AAAA,MACzC,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO,KAAK,QAAQ,QAAQ;AAAA,IAAA,CAC/B,GACD,KAAK,QAAQ,QAAQ,iBAAiB,mBAAmB,MAAM;AAC3D,WAAK,WAAW;AAAA,IAAA,CACnB,GACD,KAAK,QAAQ,QAAQ,iBAAiB,oBAAoB,MAAM;AAC5D,WAAK,YAAY;AAAA,IAAA,CACpB,GACD,KAAK,QAAQ,QAAQ,iBAAiB,mBAAmB,MAAM;AAC3D,WAAK,WAAW;AAAA,IAAA,CACnB,GACD,KAAK,QAAQ,QAAQ,iBAAiB,qBAAqB,MAAM;AAC7D,WAAK,aAAa;AAAA,IAAA,CACrB,GAEQ,SAAA,iBAAiB,SAAS,CAAC,MAAM;AACtC,YAAMC,IAAsB,EAAE;AAE3B,UAAA,KAAK,WAAWA,MAAW,KAAK,QAAQ,OAAOA,MAAW,KAAK,QAAQ,QAAS;AACnF,UAAIC,IAAUD,EAAO;AACrB,aAAMC,KAAQ;AAEP,YAAAA,MAAY,KAAK,QAAQ,IAAK;AACjC,QAAAA,IAAUA,EAAQ;AAAA,MAAA;AAEtB,WAAK,KAAK;AAAA,IAAA,CACb;AAAA,EAAA;AAAA,EAEL,SACA;AACI,IAAG,KAAK,WACJ,KAAK,QAAQ,OAAO;AAAA,EACxB;AAAA,EAEJ,UACA;AACI,IAAG,KAAK,WACJ,KAAK,QAAQ,QAAQ;AAAA,EACzB;AAAA,EAEJ,OACA;AACI,IAAG,KAAK,WACJ,KAAK,QAAQ,KAAK;AAAA,EACtB;AAER;ACzDA,MAAqBC,UAAmBP,EAAQ;AAAA,EAC5C,OAAM;AACF,UAAMQ,IAAO,MAAM;AACf,UAAG,CAAC,KAAK,QAAQ,QAAQ,UAAS;AAC9B,cAAMC,IAAO,KAAK,QAAQ,YAAY,OAAO;AAC7C,aAAK,WAAW,GAChB,KAAK,QAAQ,QAAQ,oBAAoB,SAASD,CAAI,GACjD,KAAA,QAAQ,QAAQ,YAAY,IAC5B,KAAA,QAAQ,QAAQ,OAAOC,CAAI,GAChC,KAAK,YAAY;AAAA,MAAA;AAAA,IAEzB;AACA,SAAK,QAAQ,QAAQ,iBAAiB,SAASD,CAAI;AAAA,EAAA;AAAA,EAEvD,SAAQ;AAAA,EAAA;AAAA,EAGR,UAAS;AAAA,EAAA;AAAA,EAGT,OAAM;AACF,SAAK,WAAW,GAChB,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,SAAS,GACvD,WAAW,MAAM;AACb,WAAK,KAAK,GACV,KAAK,aAAa;AAAA,OACnB,GAAG;AAAA,EAAA;AAEd;AC3BA,MAAqBE,EAAQ;AAAA,EAQzB,YAAYT,GAAuB;AAPnC,IAAAC,EAAA;AACA,IAAAA,EAAA,iBAAiC;AACjC,IAAAA,EAAA,eAA0B;AAC1B,IAAAA,EAAA,cAAyB;AACzB,IAAAA,EAAA,cAA0B;AAC1B,IAAAA,EAAA,iBAA2B,EAAC,SAAS,MAAM,QAAQ,KAAI;AAGhD,QAAA,KAAK,gBAAgBQ;AACd,YAAA,IAAI,MAAM,qBAAqB;AAEzC,SAAK,UAAUT;AAAA,EAAA;AAAA,EAGnB,SACA;AACU,UAAA,IAAI,MAAM,6BAA6B;AAAA,EAAA;AAAA,EAGjD,gBAAgBU,GAChB;AACU,UAAAC,IAAM,SAAS,cAAc,KAAK;AACxC,gBAAK,UAAUD,GACV,KAAA,QAAQ,KAAK,qBAAqB,GAClC,KAAA,OAAO,KAAK,oBAAoB,GAChC,KAAA,OAAO,KAAK,oBAAoB,GACrC,KAAK,KAAK,OAAOA,GAAS,KAAK,IAAI,GACnC,KAAK,QAAQ,UAAU,MACvB,KAAK,QAAQ,SAAS,MACnB,KAAK,QAAQ,QAAQ,gBACf,KAAA,QAAQ,UAAU,KAAK,oBAAoB,GAC3C,KAAA,QAAQ,SAAS,KAAK,mBAAmB,GAC9C,KAAK,KAAK,OAAO,KAAK,QAAQ,SAAS,KAAK,QAAQ,MAAM,IAG9DC,EAAI,OAAO,KAAK,OAAO,KAAK,IAAI,GACzBA;AAAA,EAAA;AAAA,EAGX,uBACA;AACU,UAAAA,IAAM,SAAS,cAAc,KAAK;AACxC,WAAAA,EAAI,UAAU,IAAI,eAAe,cAAc,QAAQ,SAAS,GAChEA,EAAI,MAAM,UAAU,QACbA;AAAA,EAAA;AAAA,EAGX,sBACA;AACU,UAAAC,IAAO,SAAS,cAAc,MAAM;AACrC,WAAAA,EAAA,UAAU,IAAI,UAAU,mBAAmB,GAChDA,EAAK,MAAM,MAAM,QACZA,EAAA,iBAAiB,UAAU,OAAM,MAAK;AACvC,QAAE,eAAe;AACX,YAAAC,IAAW,KAAK,SAAS;AAC/B,UAAG,KAAK,QAAQ,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,MAAM,KAAK,QAAQ,QAAQ,OAAQ,KAAK,QAAQ,eAAeA,GAAU;AAC1H,aAAK,SAAS;AACV,YAAAC;AACA,YAAA;AACA,gBAAMC,IAAW,MAAM,KAAK,KAAKF,CAAQ;AACzC,UAAGE,EAAS,KACRD,IAAM,MAAM,KAAK,QAAQ,QAAQC,GAAUF,CAAQ,IAEnDC,IAAM,MAAM,KAAK,QAAQ,MAAMC,GAAUF,CAAQ,KAAK,GAAGE,EAAS,MAAM,IAAIA,EAAS,UAAU;AAAA,iBAE9FC,GAAO;AACZ,kBAAQ,MAAMA,CAAK,GACbF,IAAAE;AAAA,QAAA;AAGV,QAAGF,KACC,KAAK,SAASA,CAAG,GACjB,KAAK,UAAU,MAEf,KAAK,SAAS,EAAE,GAChB,KAAK,UAAU,GACf,KAAK,QAAQ,SAAS,KAAK,SAAA,CAAU,GAChC,KAAA,QAAQ,YAAY,KAAK,GAC9B,KAAK,SAAS,IAElB,KAAK,SAAS;AAAA,MAAA;AAEd,aAAK,QAAQ,SAAS,KAAK,SAAA,CAAU,GAChC,KAAA,QAAQ,YAAY,KAAK,GAC9B,KAAK,SAAS;AAElB,WAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,MAAM,CAAC;AAAA,IAAA,CAC7D,GACMF;AAAA,EAAA;AAAA,EAGX,sBACA;AACU,UAAAD,IAAM,SAAS,cAAc,KAAK;AACxC,IAAAA,EAAI,MAAM,UAAU,QACpBA,EAAI,MAAM,WAAW,YACrBA,EAAI,MAAM,aAAa,SACvBA,EAAI,MAAM,QAAQ,QAClBA,EAAI,MAAM,SAAS,QACnBA,EAAI,MAAM,MAAM,KAChBA,EAAI,MAAM,OAAO;AACX,UAAAM,IAAS,SAAS,cAAc,KAAK;AACpC,WAAAA,EAAA,UAAU,IAAI,sBAAsB,GAC3CN,EAAI,OAAOM,CAAM,GACVN;AAAA,EAAA;AAAA,EAGX,eACA;AACU,UAAAO,IAAS,SAAS,cAAc,QAAQ;AAC9C,WAAAA,EAAO,OAAO,UACPA,EAAA,UAAU,IAAI,OAAO,QAAQ,GACpCA,EAAO,MAAM,QAAQ,eACrBA,EAAO,MAAM,aAAa,eACnBA;AAAA,EAAA;AAAA,EAGX,sBACA;AACU,UAAAC,IAAc,KAAK,aAAa;AACtC,WAAAA,EAAY,OAAO,UACPA,EAAA,UAAU,IAAI,aAAa,GACvCA,EAAY,YAAY,KACjBA;AAAA,EAAA;AAAA,EAGX,qBACA;AACU,UAAAC,IAAa,KAAK,aAAa;AAC1B,IAAAA,EAAA,UAAU,IAAI,YAAY;AAC/B,UAAAT,IAAM,SAAS,cAAc,KAAK;AACxC,WAAAA,EAAI,YAAY,KAChBS,EAAW,OAAOT,CAAG,GACVS,EAAA,iBAAiB,SAAS,MAAM;AAClC,WAAA,QAAQ,YAAY,KAAK;AAAA,IAAA,CACjC,GACMA;AAAA,EAAA;AAAA,EAGX,WACA;AACI,IAAG,KAAK,SACC,KAAA,KAAK,MAAM,UAAU;AAAA,EAC9B;AAAA,EAGJ,WACA;AACI,IAAG,KAAK,SACC,KAAA,KAAK,MAAM,UAAU;AAAA,EAC9B;AAAA,EAGJ,KAAKC,GACL;;AACQ,QAAAC,IAAM,KAAK,QAAQ,QAAQ;AAC/B,QAAG,CAACA;AACM,YAAA,IAAI,MAAM,kBAAkB;AAEtC,QAAG,CAAC,KAAK,QAAQ,QAAQ;AACf,YAAA,IAAI,MAAM,iBAAiB;AAErC,QAAG,CAAC,KAAK,QAAQ,QAAQ;AACf,YAAA,IAAI,MAAM,mBAAmB;AAEvC,UAAMV,IAAO,IAAI,SAAA;AAIjB,QAHAA,EAAK,OAAO,MAAM,KAAK,QAAQ,QAAQ,EAAE,GACzCA,EAAK,OAAO,QAAQ,KAAK,QAAQ,QAAQ,IAAI,GACxCA,EAAA,OAAO,SAASS,CAAS,KAC3BE,IAAA,KAAK,QAAQ,QAAQ,gBAArB,gBAAAA,EAAkC,YAAW,OAAM;AAClD,YAAMC,IAAoB,CAAC;AACtB,MAAAZ,EAAA,QAAQ,CAACa,GAAOC,MAAQ;AACzB,QAAAF,EAAO,KAAK,GAAGE,CAAG,IAAID,CAAK,EAAE;AAAA,MAAA,CAChC,GACMH,KAAA,MAAME,EAAO,KAAK,GAAG;AAAA,IAAA;AAGhC,UAAMG,IAAc,EAAC,GAAG,KAAK,QAAQ,QAAQ,YAAW;AACxD,WAAAA,EAAY,OAAOf,GACZ,MAAMU,GAAKK,CAAW;AAAA,EAAA;AAAA,EAGjC,MAAM,gBAAgBC,GAAqBC,GAC3C;AAAA,EAAA;AAAA,EAIA,MAAM,cAAcD,GAAqBC,GACzC;AAAA,EAAA;AAAA,EAIA,SAASC,GACT;AACI,IAAG,KAAK,UACJ,KAAK,MAAM,YAAYA;AAAA,EAC3B;AAAA,EAGJ,YACA;AACI,IAAG,KAAK,UACC,KAAA,MAAM,MAAM,UAAU;AAAA,EAC/B;AAAA,EAGJ,YACA;AACI,IAAG,KAAK,UACC,KAAA,MAAM,MAAM,UAAU;AAAA,EAC/B;AAAA,EAGJ,cAAcC,GACd;AACU,UAAArB,IAA4B,SAAS,cAAcqB,CAAI;AACrD,WAAArB,EAAA,UAAU,IAAI,cAAc,GACjC,KAAK,QAAQ,QAAQ,aACZA,EAAA,WAAW,KAAK,QAAQ,QAAQ,WAExC,KAAK,QAAQ,QAAQ,eACbA,EAAA,iBAAiB,UAAU,MAAM;AACrC,MAAG,KAAK,QACJ,KAAK,KAAK,cAAc,IAAI,MAAM,QAAQ,CAAC;AAAA,IAC/C,CACH,GAEL,KAAK,UAAUA,CAAO,GACfA;AAAA,EAAA;AAAA,EAGX,UAAUA,GACV;AACI,SAAK,QAAQ,QAAQ,iBAAiB,SAAS,WAAU;AACrD,MAAAA,EAAQ,MAAM;AAAA,IAAA,CACjB;AAAA,EAAA;AAAA,EAGL,WACA;AACI,WAAG,KAAK,QAAQ,SAAS,MAAM,MAC3B,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,QAAQ,aAAa,IAC5D,OAEP,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,SAAS,GAChD;AAAA,EACX;AAAA,EAGJ,cACA;AAAA,EAAA;AAAA,EAIA,WACA;AACI,WAAO,KAAK,UAAU,KAAK,QAAQ,QAAQ;AAAA,EAAA;AAEnD;ACpQA,MAAqBsB,UAAkBvB,EAAQ;AAAA,EAC3C,SAAS;AACC,UAAAwB,IAAQ,KAAK,cAAc,OAAO,GAClC,EAAE,SAAAC,IAAU,OAAO,KAAK;AAE9B,IAAAD,EAAM,OAAO,OAAOC,EAAQ,QAAS,WAAWA,EAAQ,OAAO;AAEzD,UAAAC,IAAaD,EAAQ,cAAc,CAAC,GACpCE,IAAoB;AAAA,MACtB;AAAA,MAAQ;AAAA,MAAO;AAAA,MACf;AAAA,MAAa;AAAA,MACb;AAAA,MAAW;AAAA,MACX;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAa;AAAA,MAAQ;AAAA,IACzB;AACA,eAAW,CAACV,GAAKD,CAAK,KAAK,OAAO,QAAQU,CAAU;AAChD,MAAIC,EAAkB,SAASV,CAAG,KAAKD,MAAU,UAC7CQ,EAAM,aAAaP,GAAK,OAAOD,CAAK,CAAC;AAItC,WAAA,KAAK,gBAAgBQ,CAAK;AAAA,EAAA;AAEzC;ACxBA,MAAqBI,UAAqB5B,EAAQ;AAAA,EAC9C,SAAQ;AACE,UAAA6B,IAAW,KAAK,cAAc,UAAU;AAEvC,WAAA,KAAK,gBAAgBA,CAAQ;AAAA,EAAA;AAE5C;ACNA,MAAqBC,UAAmB9B,EAAQ;AAAA,EAC5C,SAAQ;AACE,UAAA+B,IAAS,KAAK,cAAc,QAAQ;AACvC,WAAA,KAAK,QAAQ,QAAQ,UAAU,MAAM,QAAQ,KAAK,QAAQ,QAAQ,MAAM,KACvE,KAAK,QAAQ,QAAQ,OAAO,QAAQ,CAAQhC,MAAA;AAClC,YAAAiC,IAAM,SAAS,cAAc,QAAQ;AAC3C,MAAAA,EAAI,QAAQjC,EAAK,OACjBiC,EAAI,YAAYjC,EAAK,MACrBgC,EAAO,OAAOC,CAAG;AAAA,IAAA,CACpB,GAGE,KAAK,gBAAgBD,CAAM;AAAA,EAAA;AAAA,EAGtC,WAAU;AAEH,QADH,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,QAAQ,aAAa,IAChE,KAAK,QAAQ,eAAe,MAAM,KAAK,QAAQ,QAAQ,UAAU,MAAM,QAAQ,KAAK,QAAQ,QAAQ,MAAM,KAAK,KAAK,QAAQ,QAAQ,OAAO,SAAS;AAC3I,eAAAE,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQ,OAAO,QAAQA,KAAI;AACvD,cAAMlC,IAAO,KAAK,QAAQ,QAAQ,OAAQkC,CAAE;AAC5C,YAAIlC,EAAK,SAAS,KAAK,QAAQ;AACtB,sBAAA,QAAQ,QAAQ,YAAYA,EAAK,MAC/B;AAAA,MACX;AAGD,WAAA;AAAA,EAAA;AAAA,EAGX,cAAa;AACT,SAAK,QAAQ,QAAQ,UAAU,CAAA,CAAE,GAC9B,KAAK,QAAQ,WAAW,OAAO,KAAK,QAAQ,QAAQ,UAAW,YAAY,KAAK,QAAQ,QAAQ,WAAW,OACrG,KAAA,QAAQ,QAAQ,SAAS,KAAK,MAAM,KAAK,QAAQ,QAAQ,MAAM;AAAA,EACxE;AAER;AClCA,MAAqBmC,UAAiBlC,EAAQ;AAAA,EAC1C,SAAQ;AACE,UAAAwB,IAAQ,KAAK,cAAc,OAAO;AACxC,WAAAA,EAAM,OAAO,QAEN,KAAK,gBAAgBA,CAAK;AAAA,EAAA;AAAA,EAGrC,WACA;AACI,WAAG,KAAK,QAAQ,SAAS,MAAM,MAC3B,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,QAAQ,aAAa,IAC5D,OAEP,KAAK,QAAQ,QAAQ,YAAYW,EAAO,KAAK,QAAQ,SAAU,CAAA,EAAE,OAAO,KAAK,QAAQ,QAAQ,UAAU,GAChG;AAAA,EACX;AAAA,EAGJ,cACA;AACI,UAAMC,IAAS,KAAK,QAAQ,QAAQ,UAAU,YAAY,GACpDC,IAAa,KAAK,QAAQ,QAAQ,cAAc,YAAY;AAC7D,SAAA,QAAQ,SAASF,EAAO,KAAK,QAAQ,SAAS,GAAGE,CAAU,EAAE,OAAOD,CAAM,CAAC;AAAA,EAAA;AAExF;ACzBA,MAAqBE,UAAqBJ,EAAQ;AAAA,EAC9C,SAAQ;AACE,UAAAV,IAAQ,KAAK,cAAc,OAAO;AACxC,WAAAA,EAAM,OAAO,kBAEN,KAAK,gBAAgBA,CAAK;AAAA,EAAA;AAAA,EAGrC,cACA;AACI,UAAMY,IAAS,KAAK,QAAQ,QAAQ,UAAU,kBAAkB,GAC1DC,IAAa,KAAK,QAAQ,QAAQ,cAAc,kBAAkB;AACnE,SAAA,QAAQ,SAASF,EAAO,KAAK,QAAQ,SAAS,GAAGE,CAAU,EAAE,OAAOD,CAAM,CAAC;AAAA,EAAA;AAExF;ACLA;AAAA;AAAA;AAAA;AAIA,MAAqBG,EAAY;AAAA,EAO7B,YAAYtC,GAAsBwB,IAAmB,IAAI;AANzD,IAAAjC,EAAA;AACA,IAAAA,EAAA;AAEA,IAAAA,EAAA;AACA,IAAAA,EAAA;AAGI,SAAK,UAAUS,GACV,KAAA,UAAU,EAAE,GAAGwB,EAAQ,GAE5B,KAAK,aAAa,GACb,KAAA,cAAc,KAAK,WAAW,GACnC,KAAK,YAAY,YAAY,GACxB,KAAA,cAAc,KAAK,WAAW,GACnC,KAAK,YAAY,KAAK,GACtB,KAAK,UAAU,GACf,KAAK,WAAW,GACb,KAAK,QAAQ,YACZ,KAAK,QAAQ,GAEjB,KAAK,QAAQ,cAAc,IAAI,YAAY,MAAM,CAAC;AAAA,EAAA;AAAA;AAAA,EAKtD,QAAQH,GAAckB,GACtB;;AAEI,WAAO,KAAK,QAAQlB,CAAI,MAAIR,IAAA,KAAK,QAAQ,YAAb,gBAAAA,EAAwBQ,SAAUmB,IAAA,KAAK,YAAL,gBAAAA,EAAgBnB,OAAUkB;AAAA,EAAA;AAAA,EAG5F,aAAalB,GAAckB,GAC3B;AAGI,QAFK,KAAA,QAAQlB,GAAMkB,CAAa,GAE7B,OAAO,KAAK,QAASlB,CAAK,KAAM,WAAU;AAEzC,UAAG,KAAK,QAASA,CAAK,MAAM,QAAQ;AAE3B,aAAA,QAASA,CAAK,IAAI;AACvB;AAAA,MAAA;AAGJ,UAAG,KAAK,QAASA,CAAK,MAAM,SAAS;AAE5B,aAAA,QAASA,CAAK,IAAI;AACvB;AAAA,MAAA;AAGC,WAAA,QAASA,CAAK,IAAIkB;AAAA,IAAA;AAAA,EAC3B;AAAA,EAGJ,eACA;;AAEI,SAAK,QAAQ,SAAS,KAAK,QAAQ,SAAS,GAC5C,KAAK,QAAQ,QAAQ,KAAK,QAAQ,EAAE,GAC/B,KAAA,QAAQ,MAAM,IAAI,GAClB,KAAA,QAAQ,SAAS,EAAE,GACnB,KAAA,QAAQ,QAAQ,MAAM,GACtB,KAAA,QAAQ,aAAa,OAAO,GAC5B,KAAA,QAAQ,QAAQ,OAAO,GACvB,KAAA,QAAQ,OAAO,IAAI,GACnB,KAAA,QAAQ,eAAe,EAAE,GACzB,KAAA,QAAQ,cAAc,OAAO,OAAO;AAAA,MACrC,QAAQ;AAAA,MACR,UAAU;AAAA,IAAA,GACX,KAAK,QAAQ,WAAW,GACtB,KAAA,aAAa,QAAQ,EAAI,GACzB,KAAA,aAAa,YAAY,EAAK,GAC9B,KAAA,aAAa,YAAY,EAAK,GAC9B,KAAA,aAAa,eAAe,EAAI,IAClC1B,IAAA,KAAK,YAAL,QAAAA,EAAc,WAAW,SAAO2B,IAAA,KAAK,YAAL,gBAAAA,EAAc,YAAY,eACpD,KAAA,UAAU,KAAK,QAAQ,WAE7BC,IAAA,KAAK,YAAL,QAAAA,EAAc,SAAS,SAAOC,IAAA,KAAK,YAAL,gBAAAA,EAAc,UAAU,eAChD,KAAA,QAAQ,KAAK,QAAQ,QAEzB,KAAA,QAAQ,cAAc,EAAE;AAAA,EAAA;AAAA,EAGjC,YAAW;AACP,UAAMC,IAAc;AACf,SAAA,QAAQ,UAAU,OAAOA,CAAW,GACtC,KAAK,YAAY,cACX,KAAA,QAAQ,UAAU,IAAIA,CAAW;AAAA,EAC1C;AAAA,EAGJ,aAAY;AACH,SAAA,QAAQ,UAAU,IAAI,uBAAuB;AAAA,EAAA;AAAA;AAAA,EAItD,aAAY;AACA,YAAA,KAAK,QAAQ,MAAK;AAAA,MACtB;AACI,cAAM,IAAI,MAAM,QAAQ,KAAK,QAAQ,IAAI,aAAa;AAAA,MAC1D,KAAK;AACM,eAAA,IAAInD,EAAU,IAAI;AAAA,MAC7B,KAAK;AACM,eAAA,IAAII,EAAW,IAAI;AAAA,IAAA;AAAA,EAClC;AAAA,EAGJ,aACA;AACI,QAAG,KAAK,QAAQ,QAAQ,OAAO,KAAK,QAAQ,QAAS;AAEjD,aAAO,IAAI,KAAK,QAAQ,KAAK,IAAI;AAE7B,YAAA,KAAK,QAAQ,MAAM;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACM,eAAA,IAAI0B,EAAU,IAAI;AAAA,MAC7B,KAAK;AACM,eAAA,IAAIK,EAAa,IAAI;AAAA,MAChC,KAAK;AACM,eAAA,IAAIE,EAAW,IAAI;AAAA,MAC9B,KAAK;AACM,eAAA,IAAII,EAAS,IAAI;AAAA,MAC5B,KAAK;AACM,eAAA,IAAII,EAAa,IAAI;AAAA,IAAA;AAE9B,UAAA,IAAI,MAAM,gBAAgB;AAAA,EAAA;AAAA;AAAA,EAKpC,MAAM,QAAQhC,GAAoBF,GAClC;AACI,WAAO,MAAM,KAAK,YAAY,gBAAgBE,GAAUF,CAAQ;AAAA,EAAA;AAAA,EAGpE,MAAM,MAAME,GAAoBF,GAChC;AACI,WAAO,MAAM,KAAK,YAAY,cAAcE,GAAUF,CAAQ;AAAA,EAAA;AAAA;AAAA;AAAA,EAOlE,SACA;AACI,SAAK,QAAQ,WAAW,IACnB,KAAA,QAAQ,UAAU,OAAO,gCAAgC,GAC9D,KAAK,YAAY,OAAO;AAAA,EAAA;AAAA,EAG5B,UACA;AACI,SAAK,QAAQ,WAAW,IACnB,KAAA,QAAQ,UAAU,IAAI,gCAAgC,GAC3D,KAAK,YAAY,OAAO;AAAA,EAAA;AAAA,EAG5B,SAASY,GACT;AACI,SAAK,QAAQ,QAAQA,GACrB,KAAK,UAAU;AAAA,EAAA;AAAA,EAGnB,WACA;AACW,WAAA,KAAK,QAAQ,SAAS;AAAA,EAAA;AAAA;AAIrC;"}